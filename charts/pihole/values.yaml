# Default values for pihole.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: pihole/pihole
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

timezone: UTC
virtualHost: chart-example.local

# Probes configuration
probes:
  # probes.liveness -- Configure the healthcheck for the ingress controller
  liveness:
    enabled: true
    initialDelaySeconds: 60
    failureThreshold: 10
    timeoutSeconds: 5
  readiness:
    enabled: true
    initialDelaySeconds: 60
    failureThreshold: 3
    timeoutSeconds: 5

dhcp:
  enabled: false
  image:
    repository: shokohsc/dhcp-relay
    tag: "latest"

doh:
  enabled: false
  image:
    repository: crazymax/cloudflared
    tag: "latest"
  upstream: https://1.1.1.1/dns-query

persistentVolumeClaim:
  # set to true to use pvc
  enabled: false
  # set to true to use you own pvc
  # existingClaim: myExistingClaim
  annotations: {}

  accessModes:
    - ReadWriteOnce
  size: "500Mi"
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

  ## If subPath is set mount a sub folder of a volume instead of the root of the volume.
  ## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).

  ## subPath: "pihole"

# Administrator password when not using an existing secret (see below)
adminPassword: "admin"

# Use an existing secret for the admin password.
admin:
  existingSecret: ""
  passwordKey: "password"

# extraEnvironmentVars is a list of extra enviroment variables to set for pihole to use
extraEnvVars: {}
  # TZ: UTC

dnsmasq:
  upstreamServers: []
  # Here you can add upstream dns servers with. All lines will be added to the
  # pihole dnsmasq configuration.
  # The format should be like:
  # - server=/foo.bar/192.168.178.10
  # - server=/bar.foo/192.168.178.11

  customDnsEntries: []
  # Here you can add custom dns entries to override the
  # dns resolution with. All lines will be added to the
  # pihole dnsmasq configuration.
  # The format should be like:
  # - address=/foo.bar/192.168.178.10
  # - address=/bar.foo/192.168.178.11

  additionalHostsEntries: []
  # Dnsmasq reads the /etc/hosts file to resolve ips. You can add additional entries if you like
  # - 192.168.0.3     host4
  # - 192.168.0.4     host5


adlists: {}
  # If you want to provide blocklists, add them here.
  # - https://hosts-file.net/grm.txt
  # - https://reddestdream.github.io/Projects/MinimalHosts/etc/MinimalHostsBlocker/minimalhosts

whitelist: {}
  # If you want to provide whitelisted domains, add them here.
  # - clients4.google.com

blacklist: {}
  # If you want to have special domains blacklisted, add them here
  # - *.blackist.com

regex: {}
  # Add regular expression blacklist items
  # - (^|\.)facebook\.com$
